name: On Plantuml Released
run-name: On Plantuml Released ${{ github.event.client_payload.release }}
on:
  repository_dispatch:
    types: [evantill/plantuml-test-lib-released]
jobs:
  update-maven-pom:
    name: "Update maven pom file"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Store the version, stripping any v-prefix
      - name: Write release version
        env:
          EVENT_REF_NAME: "${{ github.event.client_payload.ref }}"
        run: |
          VERSION=${EVENT_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Replace the version in the pom file
      - name: Set plantuml version
        uses: rvolo/xml-replace-action@v0.2
        with:
          filepath: "pom.xml"
          xpath: "//plantuml.version/text()"
          replace: "${{ env.VERSION }}"

      #https://github.com/marketplace/actions/create-pull-request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "chore: update plantuml lib version to ${{ env.VERSION }}"
          title: "Update plantuml lib version to ${{ env.VERSION }}"
          body: |
            This is an automated PR fired by a release event fired by a plantuml library release
            New plantuml library version : ${{ env.VERSION }}
